spring:
  datasource:
    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
    url: jdbc:shardingsphere:classpath:config.yaml
#  shardingsphere:
#    datasource:
##      names: ds0
#      ds_0:
##        type: com.alibaba.druid.pool.DruidDataSource
##        type: org.apache.commons.dbcp2.BasicDataSource
#        type: com.zaxxer.hikari.HikariDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        url: jdbc:mysql://base-dev.mcptool.huaxisy.com:9080/demo?useUnicode=true&characterEncoding=UTF-8&useSSL=false
#        username: hxgy
#        password: hxeyP@ssw0rd2022
#    rules:
#      sharding:
#        tables:
#          t_log:  # 例如，按订单表分片
#            actualDataNodes: ds_0.t_log_${202411..202412}  # 2022年1月到2030年12月
#            tableStrategy:
#              standard:
#                shardingColumn: create_date_time
#                shardingAlgorithm:
#                  type: INLINE
#                  props:
#                    algorithm-expression: t_log_${create_date_time.substring(0, 7).replace('-', '')}  # YYYYMM格式
#                    algorithm-expression: t_log_$->{create_date_time.toString().substring(0, 7).replace('-', '')}  # YYYYMM格式

    props:
      sql-show: true  # 控制台显示SQL

  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  global-config:
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: assign_id
      #数据库大写下划线转换
      capital-mode: true
      #逻辑删除配置（下面3个配置）
      logic-delete-value: 1
      logic-not-delete-value: 0
      #驼峰下划线转换
      table-underline: true
  configuration:
    default-enum-type-handler: org.apache.ibatis.type.EnumOrdinalTypeHandler
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'
    ## 打印sql
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
